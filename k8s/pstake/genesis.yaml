---
apiVersion: v1
kind: Service
metadata:
  name: pstake-genesis
  labels:
    app.kubernetes.io/name: pstake-genesis
spec:
  clusterIP: None
  ports:
  - name: p2p
    port: 26656
    protocol: TCP
    targetPort: 26656
  - name: rpc
    port: 26657
    protocol: TCP
    targetPort: 26657
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: pstake-genesis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pstake-genesis
  namespace: dev-native
spec:
  serviceName: pstake-genesis
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: pstake
      app.kubernetes.io/name: pstake-genesis
  template:
    metadata:
      annotations:
        quality: release
        role: api-gateway
        sla: high
        tier: gateway
      labels:
        app.kubernetes.io/instance: pstake
        app.kubernetes.io/type: pstake-validator
        app.kubernetes.io/name: pstake-genesis
        app.kubernetes.io/version: '0.1'
    spec:
      imagePullSecrets:
        - name: test-docker-creds
      initContainers:
      - name: init-genesis
        image: persistenceone/pstake
        imagePullPolicy: Always
        env:
        - name: COINS
          value: "100000000000000000stake"
        - name: CHAIN_ID
          valueFrom:
            configMapKeyRef:
              key: chain.id
              name: pstake
        - name: PSTAKE_DIR
          value: /pstaked
        command:
        - bash
        - "-c"
        - |
            VAL_INDEX=${HOSTNAME##*-}
            echo "Validator Index: $VAL_INDEX"

            jq -r ".genesis[0].mnemonic" /configs/validators.json | pstaked init pstake --chain-id $CHAIN_ID --home $PSTAKE_DIR --recover
            jq -r ".genesis[0].mnemonic" /configs/validators.json | pstaked keys add $(jq -r ".genesis[0].name" /configs/validators.json) --recover --keyring-backend='test' --home $PSTAKE_DIR

            # Provide genesis validator self deligations
            pstaked add-genesis-account $(jq -r .genesis[$i].address /configs/validators.json) $COINS --keyring-backend='test' --home $PSTAKE_DIR

            # Give Validator addresses initial coins
            for ((i=0; i<$(jq -r '.validators | length' /configs/validators.json); i++))
            do
              pstaked add-genesis-account $(jq -r .validators[$i].address /configs/validators.json) $COINS --keyring-backend='test' --home $PSTAKE_DIR
            done

            for ((i=0; i<$(jq -r '.keys | length' /configs/keys.json); i++))
            do
              pstaked add-genesis-account $(jq -r .keys[$i].address /configs/keys.json) $COINS --keyring-backend='test' --home $PSTAKE_DIR
            done

            pstaked gentx $(jq -r ".genesis[0].name" /configs/validators.json) 5000000000stake --keyring-backend="test" --chain-id $CHAIN_ID --home $PSTAKE_DIR
            echo "Output of gentx"
            cat $PSTAKE_DIR/config/gentx/*.json | jq

            echo "Running collect-gentxs"
            pstaked collect-gentxs --home $PSTAKE_DIR

            sed -i 's#"tcp://127.0.0.1:26657"#"tcp://0.0.0.0:26657"#g' $PSTAKE_DIR/config/config.toml
            sed -i 's/timeout_commit = "5s"/timeout_commit = "1s"/g' $PSTAKE_DIR/config/config.toml
            sed -i 's/timeout_propose = "3s"/timeout_propose = "1s"/g' $PSTAKE_DIR/config/config.toml
            sed -i 's/index_all_keys = false/index_all_keys = true/g' $PSTAKE_DIR/config/config.toml

            pstaked tendermint show-node-id --home $PSTAKE_DIR > /pstaked/genesis-node-id.txt
        resources:
          limits:
            cpu: "0.2"
            memory: "0.2Gi"
          requests:
            cpu: "0.1"
            memory: "0.1Gi"
        volumeMounts:
        - mountPath: /pstaked
          name: pstaked
        - mountPath: /configs
          name: addresses
      containers:
      - name: validator
        image: persistenceone/pstake
        imagePullPolicy: Always
        env:
        - name: CHAIN_ID
          valueFrom:
            configMapKeyRef:
              key: chain.id
              name: pstake
        - name: PSTAKE_DIR
          value: /pstaked
        command:
        - bash
        - "-c"
        - |
            pstaked start --home $PSTAKE_DIR
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.5"
            memory: 0.5Gi
        volumeMounts:
        - mountPath: /pstaked
          name: pstaked
        - mountPath: /configs
          name: addresses
      - name: exposer-app
        image: persistenceone/exposer:pstake
        imagePullPolicy: Always
        env:
        - name: HOME_DIR
          value: /pstaked
        - name: GENESIS_FILE
          value: /pstaked/config/genesis.json
        - name: PORT
          value: "8080"
        - name: CLIENT_NAME
          value: "pstaked"
        command: ["exposer"]
        resources:
          limits:
            cpu: "0.1"
            memory: "0.1Gi"
          requests:
            cpu: "0.1"
            memory: "0.1Gi"
        volumeMounts:
        - mountPath: /pstaked
          name: pstaked
      volumes:
      - name: pstaked
        emptyDir: {}
      - name: addresses
        configMap:
          name: test-addresses-pstake
---
